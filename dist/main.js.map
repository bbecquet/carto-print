{"version":3,"sources":["../src/main.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAI,aAAJ;;AAEA,SAAS,IAAT,GAAiB;;AAEb,gBAAG,MAAH,CAAU,KAAV,EAAiB,MAAjB;AACA,QAAM,QAAQ,GAAd;;AACI,aAAS,GADb,C;;;AAIA,QAAM,MAAM,YAAG,MAAH,CAAU,MAAV,EAAkB,MAAlB,CAAyB,KAAzB,EACP,IADO,CACF,OADE,EACO,KADP,EAEP,IAFO,CAEF,QAFE,EAEQ,MAFR,CAAZ;;;AAKA,QAAM,UAAU,IAAI,MAAJ,CAAW,GAAX,EACX,IADW,CACN,WADM,EACO,YADP,CAAhB;;AAGA,QAAM,aAAa,YAAG,GAAH,CAAO,QAAP,EAAnB;;;;;;AAMA,WAAO,UAAP;;;;;;;;;;AAUA,QAAM,QAAQ,YAAG,GAAH,CAAO,IAAP,GAAc,WAAd,CAA0B,CAA1B,EAA6B,UAA7B,CAAwC,UAAxC,CAAd;;;AAGA,YAAQ,MAAR,CAAe,MAAf,EACK,IADL,CACU,OADV,EACmB,KADnB,EAEK,IAFL,CAEU,QAFV,EAEoB,MAFpB,EAGK,IAHL,CAGU,OAHV,EAGmB,OAHnB;;AAKA,gBAAG,IAAH,CAAQ,gBAAR,EAA0B,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AAC5C,YAAI,KAAJ,EAAW,OAAO,QAAQ,KAAR,CAAc,KAAd,CAAP;AACX,gBAAQ,GAAR,CAAY,IAAZ;;AAEA,gBAAQ,MAAR,CAAe,MAAf,EACK,KADL,CACW,mBAAS,IAAT,CAAc,IAAd,EAAoB,KAAK,OAAL,CAAa,IAAjC,CADX,EAEK,IAFL,CAEU,GAFV,EAEe,YAAG,GAAH,CAAO,IAAP,GAAc,UAAd,CAAyB,UAAzB,CAFf,EAGK,IAHL,CAGU,OAHV,EAGmB,MAHnB;;AAKA,gBAAQ,MAAR,CAAe,MAAf,EACK,KADL,CACW,mBAAS,IAAT,CAAc,IAAd,EAAoB,KAAK,OAAL,CAAa,SAAjC,CADX,EAEK,IAFL,CAEU,GAFV,EAEe,YAAG,GAAH,CAAO,IAAP,GAAc,UAAd,CAAyB,UAAzB,CAFf,EAGK,IAHL,CAGU,OAHV,EAGmB,kBAHnB;AAIH,KAbD;;;;;;;;AAqBH;;AAED,IAAM,SAAS;AACX,UAAM,gBAAW;;AAEb,gBAAQ,MAAR,CAAe,GAAf,EAAoB,IAApB,CAAyB,IAAzB,EAA+B,WAA/B,EAA4C,SAA5C,CAAsD,MAAtD,EACK,IADL,CACU,KAAK,IAAL,CAAU,QADpB,EAEK,KAFL,GAGK,MAHL,CAGY,MAHZ,EAIK,IAJL,CAIU,GAJV,EAIe,IAJf,EAKK,IALL,CAKU,MALV,EAKkB,UAAS,CAAT,EAAY;AACtB,gBAAI,CAAC,QAAD,EAAU,SAAV,EAAoB,gBAApB,EAAsC,OAAtC,EAA+C,SAA/C,EAA0D,OAA1D,EAAmE,OAAnE,CAA2E,EAAE,UAAF,CAAa,KAAxF,IAAiG,CAAC,CAAtG,EAA0G;AACtG,uBAAO,SAAP;AACH;AACD,mBAAO,MAAP;AACH,SAVL,EAWK,IAXL,CAWU,QAXV,EAWoB,MAXpB,EAYK,IAZL,CAYU,cAZV,EAY0B,CAZ1B,EAaK,IAbL,CAaU,gBAbV,EAa4B,CAb5B;AAcH;;;;;;;;;;;;;;AAjBU,CAAf;;AAkCA,IAAM,MAAM;AACR;AADQ,CAAZ;;kBAIe,G","file":"main.js","sourcesContent":["import d3 from 'd3';\nimport topojson from 'topojson';\n\nlet proj;\n\nfunction draw () {\n    //erase previously drawn svg\n    d3.select(\"svg\").remove();\n    const width = 500, //style.viewport.width,\n        height = 300; //style.viewport.height;\n\n    //create svg element\n    const svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    //clip container. #clip is a reference to a def that is added at the very last moment to the svg string\n    const svgRoot = svg.append(\"g\")\n        .attr('clip-path', 'url(#clip)');\n\n    const projection = d3.geo.mercator();\n        // d3.geo.conicConformal()\n        // .scale(parseInt($('.js-scale').val()))\n        // .translate([parseInt($('.js-center-x').val()), parseInt($('.js-center-y').val())])\n        // .clipAngle(90);\n\n    proj = projection;\n\n    /*\n    const path = d3.geo.path().pointRadius(function(d) {\n        return (d.properties && d.properties.opened) ?\n            style.assembly.radius :\n            style.assemblyConstruct.radius;\n    }).projection(projection);\n    */\n\n    const path2 = d3.geo.path().pointRadius(1).projection(projection);\n\n    //ocean\n    svgRoot.append('rect')\n        .attr('width', width)\n        .attr('height', height)\n        .attr('class', 'ocean');\n\n    d3.json(\"world-50m.json\", function(error, data) {\n        if (error) return console.error(error);\n        console.log(data);\n\n        svgRoot.append('path')\n            .datum(topojson.mesh(data, data.objects.land))\n            .attr('d', d3.geo.path().projection(projection))\n            .attr('class', 'land');\n\n        svgRoot.append('path')\n            .datum(topojson.mesh(data, data.objects.countries))\n            .attr('d', d3.geo.path().projection(projection))\n            .attr('class', 'country-boundary');\n    });\n\n    /*\n    const dataPaths = Object.keys(data);\n    dataPaths.forEach(function(dataPath) {\n        Layers[dataPath]();\n    });\n    */\n}\n\nconst Layers = {\n    land: function() {\n        //land\n        svgRoot.append(\"g\").attr(\"id\", \"countries\").selectAll(\"path\")\n            .data(data.land.features)\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"fill\", function(d) {\n                if (['France','Germany','United Kingdom', 'Spain', 'Belgium', 'Italy'].indexOf(d.properties.admin) > -1 ) {\n                    return '#F4783D';\n                }\n                return '#FFF';\n            } )\n            .attr(\"stroke\", '#FFF')\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke-opacity\", 1);\n    }\n\n    /*,\n\n    admin: function() {\n        //admin (IDF)\n        svgRoot.append(\"g\").attr(\"id\", \"idf\").selectAll(\"path\")\n            .data(data.admin.features, function(d) { return d.geometry.coordinates[0]; })\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", style.region.outline)\n            .attr(\"stroke-width\", style.region.outlineWidth );\n    }*/\n};\n\nconst app = {\n    draw\n};\n\nexport default app;\n"]}